<?php
/**
 * BSeller Platform | B2W - Companhia Digital
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  ${MAGENTO_MODULE_NAMESPACE}
 * @package   ${MAGENTO_MODULE_NAMESPACE}_${MAGENTO_MODULE}
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br)
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */

namespace BitTools\SkyHub\Observer\Sales\Order\Status;

use BitTools\SkyHub\Observer\Sales\AbstractSales;
use Magento\Framework\Event\Observer;

class ProcessCompleteStatusOrder extends AbstractSales
{

    /**
     * @param Observer $observer
     */
    public function execute(Observer $observer)
    {
        /** @var \Magento\Sales\Api\Data\OrderInterface $order */
        $order = $observer->getData('order');

        if (!$this->validateOrder($order)) {
            return;
        }

        /** @var \BitTools\SkyHub\StoreConfig\SalesOrderStatus $orderStatus */
        $orderStatus = $this->context->configContext()->salesOrderStatus();

        switch ($order->getStatus()) {
            case $orderStatus->getDeliveredOrdersStatus():
                $this->processDeliveredCustomerStatus($order);
            case $orderStatus->getShipmentExceptionOrderStatus():
                $this->processShipmentExceptionCustomerStatus($order);
        }

    }
    
    
    /**
     * @param \Magento\Sales\Api\Data\OrderInterface $order
     *
     * @return $this
     */
    protected function processDeliveredCustomerStatus(\Magento\Sales\Model\Order $order)
    {
        try {
            $this->storeIterator->call($this->orderIntegrator, 'delivery', [$order->getEntityId()], $order->getStore());
        } catch (\Exception $e) {
            $this->context->logger()->critical($e);
        }
        
        return $this;
    }


    protected function processShipmentExceptionCustomerStatus(\Magento\Sales\Model\Order $order)
    {
        try {

            $datetime = new \DateTime($this->timezone->date()->format('Y-m-d H:i:s'));
            $currentTime = $datetime->format(\DateTime::ATOM); // Updated ISO8601

            $lastComment = $order->getStatusHistoryCollection()->getFirstItem();

            $this->storeIterator->call(
                $this->orderIntegrator,
                'shipmentException',
                [$order->getEntityId(), $currentTime, $lastComment->getComment()],
                $order->getStore()
            );

        } catch (\Exception $e) {
            $this->context->logger()->critical($e);
        }

        return $this;
    }
    
    /**
     * @param \Magento\Sales\Api\Data\OrderInterface $order
     *
     * @return bool
     */
    protected function validateOrder(\Magento\Sales\Model\Order $order)
    {
        if (!$order || !$order->getEntityId()) {
            return false;
        }
        
        if ($order->getState() != \Magento\Sales\Model\Order::STATE_COMPLETE) {
            return false;
        }
        
        return true;
    }
}
